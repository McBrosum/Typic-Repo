[gd_scene load_steps=5 format=3 uid="uid://b7b5j7g5cu6ah"]

[sub_resource type="GDScript" id="GDScript_id4r6"]
script/source = "extends LineEdit

@onready var animation_player = $AnimationPlayer
@onready var letter_options = %Letter_Options


# text containers for choosing random characte
'''
const TEXT_CONTAINER_SYMBOL: Dictionary = {
	0: \"!\", 1: \"@\", 2: \"#\", 3: \"$\",
	4: \"%\", 5: \"^\", 6: \"&\", 7: \"*\",
	8: \"(\", 9: \")\", 10: \"-\", 11: \"_\",
	12: \"+\", 13: \"=\", 14: \"[\", 15: \"]\",
	16: \"{\", 17: \"}\", 18: \";\", 19: \"'\",
	20: \":\", 21: \"\\\"\", 22: \",\", 23: \"<\",
	24: \".\", 25: \">\", 26: \"/\", 27: \"?\"
	0: \"0\", 1: \"1\", 2: \"2\", 3: \"3\",
	4: \"4\", 5: \"5\", 6: \"6\", 7: \"7\",
	8: \"8\", 9: \"9\"
	0: \"a\", 1: \"b\", 2: \"c\", 3: \"d\",
	4: \"e\", 5: \"f\", 6: \"g\", 7: \"h\",
	8: \"i\", 9: \"j\", 10: \"k\", 11: \"l\",
	12: \"m\", 13: \"n\", 14: \"o\", 15: \"p\",
	16: \"q\", 17: \"r\", 18: \"s\", 19: \"t\",
	20: \"u\", 21: \"v\", 22: \"w\", 23: \"x\",  
	24: \"y\", 25: \"z\"
}
'''

# Symbol: 0 - 27
# Number: 28 - 37
# lowercase letter: 38 - 63
# uppercase letter: 64 - 89
const TEXT_CONTAINER: Dictionary = {
	0: \"!\", 1: \"@\", 2: \"#\", 3: \"$\", 4: \"%\", 5: \"^\", 6: \"&\", 7: \"*\", 8: \"(\", 9: \")\", 10: \"-\", 11: \"_\", 12: \"+\", 13: \"=\", 14: \"[\", 15: \"]\", 16: \"{\", 17: \"}\", 18: \";\", 19: \"'\", 20: \":\", 21: \"\\\"\", 22: \",\", 23: \"<\", 24: \".\", 25: \">\", 26: \"/\", 27: \"?\",
	28: \"0\", 29: \"1\", 30: \"2\", 31: \"3\", 32: \"4\", 33: \"5\", 34: \"6\", 35: \"7\", 36: \"8\", 37: \"9\",
	38: \"a\", 39: \"b\", 40: \"c\", 41: \"d\", 42: \"e\", 43: \"f\", 44: \"g\", 45: \"h\", 46: \"i\", 47: \"j\", 48: \"k\", 49: \"l\", 50: \"m\", 51: \"n\", 52: \"o\", 53: \"p\", 54: \"q\", 55: \"r\", 56: \"s\", 57: \"t\", 58: \"u\", 59: \"v\", 60: \"w\", 61: \"x\", 62: \"y\", 63: \"z\",
	64: \"A\", 65: \"B\", 66: \"C\", 67: \"D\", 68: \"E\", 69: \"F\", 70: \"G\", 71: \"H\", 72: \"I\", 73: \"J\", 74: \"K\", 75: \"L\", 76: \"M\", 77: \"N\", 78: \"O\", 79: \"P\", 80: \"Q\", 81: \"R\", 82: \"S\", 83: \"T\", 84: \"U\", 85: \"V\", 86: \"W\", 87: \"X\", 88: \"Y\", 89: \"Z\"
}

var char_begin_index: int
var char_end_index: int


func _ready():
	char_begin_index = 0
	char_end_index = TEXT_CONTAINER.size() - 1
	self.generate_character(10, {})


func set_char_index(begin_index: int, end_index: int):
	char_begin_index = begin_index
	char_end_index = end_index


func wrong_answer_animation():
	animation_player.play(\"wrong_anwser\")


func generate_character(text_length: int, character_frequency: Dictionary):
	# get the characters and their frequencies
	var pairs = character_frequency.keys().map(func(key): return[key, character_frequency[key]])
	
	# set indexes for pairs and text
	var total_text_index: int = 0
	var hard_text_index: int
	if pairs.size() > 0:
		hard_text_index = pairs.size() - 1
	# fill the rest of the random characters into the computer text
	while total_text_index < text_length && self.text.length() < 10:
		# set chance to write hard_char and remove characters with frequency of 0
		var chance_increase = 1
		var hard_char: String
		if pairs.size() > 0:
			chance_increase = pairs[hard_text_index][1]
			
			# remove current character
			hard_char = str(pairs[hard_text_index][0])
			if pairs[hard_text_index][1] == 0:
				character_frequency.erase(hard_char)
				hard_text_index += 1
		
		# 20% chance for hard character. 80% chance for random character
		if randi_range(0, int(10 / (chance_increase + 1))) == 0 && pairs.size() > 0:
			self.text = self.text + hard_char
			hard_text_index -= 1
		else:
			# random character
			var random_char: String
			
			## choose a random character based on the selected letter options
			# Symbol: 0 - 27
			# Number: 28 - 37
			# lowercase letter: 38 - 63
			# uppercase letter: 64 - 89
			# ---
			# item 0: abc
			# item 1: ABC
			# item 2: 123
			# item 3: </>
			var chosen: bool = false
			while !chosen:
				var random_value = randi_range(0, 4)
				if random_value == 0 && letter_options.get_item_value(0) == true:
					# lowercase letters
					random_char = TEXT_CONTAINER.get(randi_range(38, 63))
					chosen = true
				elif random_value == 1 && letter_options.get_item_value(1) == true:
					# uppercase letters
					random_char = TEXT_CONTAINER.get(randi_range(64, 89))
					chosen = true
				elif random_value == 2 && letter_options.get_item_value(2) == true:
					# numbers
					random_char = TEXT_CONTAINER.get(randi_range(28, 37))
					chosen = true
				elif random_value == 3 && letter_options.get_item_value(3) == true:
					# symbols
					random_char = TEXT_CONTAINER.get(randi_range(0, 27))
					chosen = true
			self.text = self.text + random_char
		total_text_index += 1


func reset_text(text_length: int = 10):
	self.text = \"\"
	self.generate_character(text_length, {})
"

[sub_resource type="Animation" id="Animation_f72it"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:theme_override_colors/font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 1)]
}

[sub_resource type="Animation" id="Animation_3emh2"]
resource_name = "wrong_answer"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:theme_override_colors/font_color")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.921164, 0.483462, 0.505342, 1), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_axxsc"]
_data = {
"RESET": SubResource("Animation_f72it"),
"wrong_answer": SubResource("Animation_3emh2")
}

[node name="computer_text" type="LineEdit"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -609.0
offset_top = -339.0
offset_right = -541.938
offset_bottom = -308.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
editable = false
script = SubResource("GDScript_id4r6")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_axxsc")
}
